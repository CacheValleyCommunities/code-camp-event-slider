{"ast":null,"code":"import { io } from \"socket.io-client\";\nclass SocketHelper {\n  constructor() {\n    if (!SocketHelper.instance) {\n      this.socket = null;\n      this.isConnecting = false;\n      this.connectionPromise = null;\n      SocketHelper.instance = this;\n    }\n    return SocketHelper.instance;\n  }\n  connect(url, authToken) {\n    if (this.socket) {\n      return Promise.resolve(this.socket); // Return existing socket if already connected\n    }\n    if (this.isConnecting) {\n      return this.connectionPromise; // Return the existing connection promise\n    }\n    this.isConnecting = true;\n    this.connectionPromise = new Promise((resolve, reject) => {\n      this.socket = io(url, {\n        auth: {\n          token: authToken\n        },\n        transports: [\"websocket\"]\n      });\n      this.socket.on(\"connect\", () => {\n        console.log(\"Socket connected:\", this.socket.id);\n        this.isConnecting = false; // Reset connecting flag\n        resolve(this.socket); // Resolve promise with the socket instance\n      });\n      this.socket.on(\"disconnect\", () => {\n        console.log(\"Socket disconnected\");\n      });\n      this.socket.on(\"connect_error\", error => {\n        this.isConnecting = false; // Reset connecting flag\n        reject(error); // Reject promise on error\n      });\n    });\n    return this.connectionPromise;\n  }\n  emit(event, data) {\n    if (this.socket) {\n      this.socket.emit(event, data);\n    }\n  }\n  on(event, callback) {\n    if (this.socket) {\n      this.socket.on(event, callback);\n    }\n  }\n  off(event) {\n    if (this.socket) {\n      this.socket.off(event);\n    }\n  }\n}\nconst websocket = new SocketHelper();\nexport default websocket;","map":{"version":3,"names":["io","SocketHelper","constructor","instance","socket","isConnecting","connectionPromise","connect","url","authToken","Promise","resolve","reject","auth","token","transports","on","console","log","id","error","emit","event","data","callback","off","websocket"],"sources":["/Users/brentdalling/Projects/code-camp-event-slider/src/helpers/websocket.js"],"sourcesContent":["import { io } from \"socket.io-client\";\n\nclass SocketHelper {\n  constructor() {\n    if (!SocketHelper.instance) {\n      this.socket = null;\n      this.isConnecting = false;\n      this.connectionPromise = null;\n      SocketHelper.instance = this;\n    }\n    return SocketHelper.instance;\n  }\n\n  connect(url, authToken) {\n    if (this.socket) {\n      return Promise.resolve(this.socket); // Return existing socket if already connected\n    }\n\n    if (this.isConnecting) {\n      return this.connectionPromise; // Return the existing connection promise\n    }\n\n    this.isConnecting = true;\n\n    this.connectionPromise = new Promise((resolve, reject) => {\n      this.socket = io(url, {\n        auth: { token: authToken },\n        transports: [\"websocket\"],\n      });\n\n      this.socket.on(\"connect\", () => {\n        console.log(\"Socket connected:\", this.socket.id);\n        this.isConnecting = false; // Reset connecting flag\n        resolve(this.socket); // Resolve promise with the socket instance\n      });\n\n      this.socket.on(\"disconnect\", () => {\n        console.log(\"Socket disconnected\");\n      });\n\n      this.socket.on(\"connect_error\", (error) => {\n        this.isConnecting = false; // Reset connecting flag\n        reject(error); // Reject promise on error\n      });\n    });\n\n    return this.connectionPromise;\n  }\n\n  emit(event, data) {\n    if (this.socket) {\n      this.socket.emit(event, data);\n    }\n  }\n\n  on(event, callback) {\n    if (this.socket) {\n      this.socket.on(event, callback);\n    }\n  }\n\n  off(event) {\n    if (this.socket) {\n      this.socket.off(event);\n    }\n  }\n}\n\nconst websocket = new SocketHelper();\nexport default websocket;\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;AAErC,MAAMC,YAAY,CAAC;EACjBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACD,YAAY,CAACE,QAAQ,EAAE;MAC1B,IAAI,CAACC,MAAM,GAAG,IAAI;MAClB,IAAI,CAACC,YAAY,GAAG,KAAK;MACzB,IAAI,CAACC,iBAAiB,GAAG,IAAI;MAC7BL,YAAY,CAACE,QAAQ,GAAG,IAAI;IAC9B;IACA,OAAOF,YAAY,CAACE,QAAQ;EAC9B;EAEAI,OAAOA,CAACC,GAAG,EAAEC,SAAS,EAAE;IACtB,IAAI,IAAI,CAACL,MAAM,EAAE;MACf,OAAOM,OAAO,CAACC,OAAO,CAAC,IAAI,CAACP,MAAM,CAAC,CAAC,CAAC;IACvC;IAEA,IAAI,IAAI,CAACC,YAAY,EAAE;MACrB,OAAO,IAAI,CAACC,iBAAiB,CAAC,CAAC;IACjC;IAEA,IAAI,CAACD,YAAY,GAAG,IAAI;IAExB,IAAI,CAACC,iBAAiB,GAAG,IAAII,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACxD,IAAI,CAACR,MAAM,GAAGJ,EAAE,CAACQ,GAAG,EAAE;QACpBK,IAAI,EAAE;UAAEC,KAAK,EAAEL;QAAU,CAAC;QAC1BM,UAAU,EAAE,CAAC,WAAW;MAC1B,CAAC,CAAC;MAEF,IAAI,CAACX,MAAM,CAACY,EAAE,CAAC,SAAS,EAAE,MAAM;QAC9BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAACd,MAAM,CAACe,EAAE,CAAC;QAChD,IAAI,CAACd,YAAY,GAAG,KAAK,CAAC,CAAC;QAC3BM,OAAO,CAAC,IAAI,CAACP,MAAM,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC;MAEF,IAAI,CAACA,MAAM,CAACY,EAAE,CAAC,YAAY,EAAE,MAAM;QACjCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MACpC,CAAC,CAAC;MAEF,IAAI,CAACd,MAAM,CAACY,EAAE,CAAC,eAAe,EAAGI,KAAK,IAAK;QACzC,IAAI,CAACf,YAAY,GAAG,KAAK,CAAC,CAAC;QAC3BO,MAAM,CAACQ,KAAK,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,IAAI,CAACd,iBAAiB;EAC/B;EAEAe,IAAIA,CAACC,KAAK,EAAEC,IAAI,EAAE;IAChB,IAAI,IAAI,CAACnB,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACiB,IAAI,CAACC,KAAK,EAAEC,IAAI,CAAC;IAC/B;EACF;EAEAP,EAAEA,CAACM,KAAK,EAAEE,QAAQ,EAAE;IAClB,IAAI,IAAI,CAACpB,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACY,EAAE,CAACM,KAAK,EAAEE,QAAQ,CAAC;IACjC;EACF;EAEAC,GAAGA,CAACH,KAAK,EAAE;IACT,IAAI,IAAI,CAAClB,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACqB,GAAG,CAACH,KAAK,CAAC;IACxB;EACF;AACF;AAEA,MAAMI,SAAS,GAAG,IAAIzB,YAAY,CAAC,CAAC;AACpC,eAAeyB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}