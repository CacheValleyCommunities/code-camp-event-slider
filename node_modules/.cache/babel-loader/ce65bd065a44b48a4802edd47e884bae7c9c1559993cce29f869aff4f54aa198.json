{"ast":null,"code":"/**\n * Procedural Sky Element for Canvas System\n * Integrates SkyGenerator with the existing Canvas layer system\n */\n\nimport SkyGenerator from '../../../graphics/generators/SkyGenerator.js';\nfunction ProceduralSky(canvas, options = {}) {\n  const skyGenerator = new SkyGenerator(canvas, {\n    timeOfDay: options.timeOfDay || 'day',\n    enableNoise: options.enableNoise !== false,\n    noiseIntensity: options.noiseIntensity || 0.05,\n    enableSun: options.enableSun !== false,\n    sunPosition: options.sunPosition || {\n      x: 0.8,\n      y: 0.2\n    },\n    animationSpeed: options.animationSpeed || 0.001,\n    ...options\n  });\n\n  // Enable automatic time of day if requested\n  if (options.automaticTimeOfDay) {\n    skyGenerator.enableAutomaticTimeOfDay();\n  }\n  return {\n    type: 'proceduralSky',\n    x: 0,\n    y: 0,\n    width: canvas.width,\n    height: canvas.height,\n    speed: 0,\n    // Sky is completely static - no movement\n    skyGenerator: skyGenerator,\n    lastUpdateTime: Date.now(),\n    // Update method called by the animation loop\n    update() {\n      const now = Date.now();\n      const deltaTime = now - this.lastUpdateTime;\n      this.lastUpdateTime = now;\n      this.skyGenerator.update(deltaTime);\n    },\n    // Render method called by the animation loop\n    render(ctx, offsetX = 0) {\n      // Sky ignores all offset parameters and renders statically\n      this.skyGenerator.render(0, 0);\n    },\n    // Configuration methods\n    setTimeOfDay(timeOfDay, transitionDuration = 2000) {\n      this.skyGenerator.setTimeOfDay(timeOfDay, transitionDuration);\n    },\n    updateOptions(newOptions) {\n      this.skyGenerator.updateOptions(newOptions);\n    },\n    // Cleanup\n    destroy() {\n      this.skyGenerator.destroy();\n    }\n  };\n}\n_c = ProceduralSky;\nexport default ProceduralSky;\nvar _c;\n$RefreshReg$(_c, \"ProceduralSky\");","map":{"version":3,"names":["SkyGenerator","ProceduralSky","canvas","options","skyGenerator","timeOfDay","enableNoise","noiseIntensity","enableSun","sunPosition","x","y","animationSpeed","automaticTimeOfDay","enableAutomaticTimeOfDay","type","width","height","speed","lastUpdateTime","Date","now","update","deltaTime","render","ctx","offsetX","setTimeOfDay","transitionDuration","updateOptions","newOptions","destroy","_c","$RefreshReg$"],"sources":["/Users/brentdalling/Projects/code-camp-event-slider/src/components/Canvas/Sprites/ProceduralSky.js"],"sourcesContent":["/**\n * Procedural Sky Element for Canvas System\n * Integrates SkyGenerator with the existing Canvas layer system\n */\n\nimport SkyGenerator from '../../../graphics/generators/SkyGenerator.js';\n\nfunction ProceduralSky(canvas, options = {}) {\n    const skyGenerator = new SkyGenerator(canvas, {\n        timeOfDay: options.timeOfDay || 'day',\n        enableNoise: options.enableNoise !== false,\n        noiseIntensity: options.noiseIntensity || 0.05,\n        enableSun: options.enableSun !== false,\n        sunPosition: options.sunPosition || { x: 0.8, y: 0.2 },\n        animationSpeed: options.animationSpeed || 0.001,\n        ...options\n    });\n\n    // Enable automatic time of day if requested\n    if (options.automaticTimeOfDay) {\n        skyGenerator.enableAutomaticTimeOfDay();\n    }\n\n    return {\n        type: 'proceduralSky',\n        x: 0,\n        y: 0,\n        width: canvas.width,\n        height: canvas.height,\n        speed: 0, // Sky is completely static - no movement\n        skyGenerator: skyGenerator,\n        lastUpdateTime: Date.now(),\n\n        // Update method called by the animation loop\n        update() {\n            const now = Date.now();\n            const deltaTime = now - this.lastUpdateTime;\n            this.lastUpdateTime = now;\n\n            this.skyGenerator.update(deltaTime);\n        },\n\n        // Render method called by the animation loop\n        render(ctx, offsetX = 0) {\n            // Sky ignores all offset parameters and renders statically\n            this.skyGenerator.render(0, 0);\n        },\n\n        // Configuration methods\n        setTimeOfDay(timeOfDay, transitionDuration = 2000) {\n            this.skyGenerator.setTimeOfDay(timeOfDay, transitionDuration);\n        },\n\n        updateOptions(newOptions) {\n            this.skyGenerator.updateOptions(newOptions);\n        },\n\n        // Cleanup\n        destroy() {\n            this.skyGenerator.destroy();\n        }\n    };\n}\n\nexport default ProceduralSky;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAOA,YAAY,MAAM,8CAA8C;AAEvE,SAASC,aAAaA,CAACC,MAAM,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACzC,MAAMC,YAAY,GAAG,IAAIJ,YAAY,CAACE,MAAM,EAAE;IAC1CG,SAAS,EAAEF,OAAO,CAACE,SAAS,IAAI,KAAK;IACrCC,WAAW,EAAEH,OAAO,CAACG,WAAW,KAAK,KAAK;IAC1CC,cAAc,EAAEJ,OAAO,CAACI,cAAc,IAAI,IAAI;IAC9CC,SAAS,EAAEL,OAAO,CAACK,SAAS,KAAK,KAAK;IACtCC,WAAW,EAAEN,OAAO,CAACM,WAAW,IAAI;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAI,CAAC;IACtDC,cAAc,EAAET,OAAO,CAACS,cAAc,IAAI,KAAK;IAC/C,GAAGT;EACP,CAAC,CAAC;;EAEF;EACA,IAAIA,OAAO,CAACU,kBAAkB,EAAE;IAC5BT,YAAY,CAACU,wBAAwB,CAAC,CAAC;EAC3C;EAEA,OAAO;IACHC,IAAI,EAAE,eAAe;IACrBL,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJK,KAAK,EAAEd,MAAM,CAACc,KAAK;IACnBC,MAAM,EAAEf,MAAM,CAACe,MAAM;IACrBC,KAAK,EAAE,CAAC;IAAE;IACVd,YAAY,EAAEA,YAAY;IAC1Be,cAAc,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;IAE1B;IACAC,MAAMA,CAAA,EAAG;MACL,MAAMD,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB,MAAME,SAAS,GAAGF,GAAG,GAAG,IAAI,CAACF,cAAc;MAC3C,IAAI,CAACA,cAAc,GAAGE,GAAG;MAEzB,IAAI,CAACjB,YAAY,CAACkB,MAAM,CAACC,SAAS,CAAC;IACvC,CAAC;IAED;IACAC,MAAMA,CAACC,GAAG,EAAEC,OAAO,GAAG,CAAC,EAAE;MACrB;MACA,IAAI,CAACtB,YAAY,CAACoB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAClC,CAAC;IAED;IACAG,YAAYA,CAACtB,SAAS,EAAEuB,kBAAkB,GAAG,IAAI,EAAE;MAC/C,IAAI,CAACxB,YAAY,CAACuB,YAAY,CAACtB,SAAS,EAAEuB,kBAAkB,CAAC;IACjE,CAAC;IAEDC,aAAaA,CAACC,UAAU,EAAE;MACtB,IAAI,CAAC1B,YAAY,CAACyB,aAAa,CAACC,UAAU,CAAC;IAC/C,CAAC;IAED;IACAC,OAAOA,CAAA,EAAG;MACN,IAAI,CAAC3B,YAAY,CAAC2B,OAAO,CAAC,CAAC;IAC/B;EACJ,CAAC;AACL;AAACC,EAAA,GAvDQ/B,aAAa;AAyDtB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}